import{r as t,z as W,g as r,x as k}from"./assets/index-BDcs8OaA.js";import{u as I}from"./kn1s7jTN.js";import{u as x}from"./ZLekcFwQ.js";(function(){try{var s=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},c=new Error().stack;c&&(s._sentryDebugIds=s._sentryDebugIds||{},s._sentryDebugIds[c]="9cebf1fa-c0ef-4c70-ac85-94e92c610708",s._sentryDebugIdIdentifier="sentry-dbid-9cebf1fa-c0ef-4c70-ac85-94e92c610708")}catch{}})();const P=(s,c)=>{const{getMaxBalance:l,isWalletConnected:f}=I(),{synthAssets:h}=x(),[d,p]=t.useState([]),[m,g]=t.useState([]),o=t.useCallback(async e=>{const n=await l(e,!0)||W;return f(e.chain)&&n.bigIntValue>0n?n:void 0},[l,f]);t.useEffect(()=>{Promise.all(h.map(e=>o(e).then(n=>({asset:e,provider:"Thorchain",identifier:e.symbol,balance:n})))).then(e=>g(e))},[o,h]);const y=t.useCallback(async()=>{const n=(c?s.filter(a=>a?.tokenlist?.toLowerCase()==="thorchain"):s).map(async({identifier:a,address:b,chain:w,...A})=>{const C=w||a.split(".")[0],[i]=a.split("-");if(i.includes("/")&&!i.startsWith(r.THUNDERChain))return null;const u=k.fromStringSync([r.Avalanche,r.Ethereum,r.BinanceSmartChain].includes(C)?`${i}${b?`-${b}`:""}`:a);if(!u)return null;const S=await o(u);return{asset:u,balance:S,identifier:a,...A}}),B=await Promise.all(n);p(B.filter(Boolean))},[c,s,o]);return t.useEffect(()=>{y()},[y]),t.useMemo(()=>d.concat(m),[d,m])};export{P as u};
