import{r as n,e as g,x as B,k as w}from"./assets/index-BDcs8OaA.js";import{u as D}from"./kn1s7jTN.js";import{u as x}from"./xirfvWJJ.js";import{u as S}from"./ZLekcFwQ.js";(function(){try{var s=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new Error().stack;t&&(s._sentryDebugIds=s._sentryDebugIds||{},s._sentryDebugIds[t]="8fc9c7d7-3432-4f56-af38-2dbc16d7b8b9",s._sentryDebugIdIdentifier="sentry-dbid-8fc9c7d7-3432-4f56-af38-2dbc16d7b8b9")}catch{}})();const k=({assets:s,includeRune:t}={})=>{const{getMaxBalance:o}=D(),{pools:u}=S(),[b,p]=n.useState([]),c=n.useMemo(()=>s?.map(e=>e.symbol)||[],[s]),m=x(e=>p(e),500),i=n.useCallback(async e=>{const r=(t?[...e,{asset:g.toString()}]:e).map(async l=>{const f=B.fromStringSync(l.asset),h=await o(f,!0);return{asset:f,balance:h}}),d=await Promise.all(r),y=c.length>0?d.filter(l=>c.includes(l.asset.symbol)):d;m(y)},[c,o,t]);return n.useEffect(()=>{const e=u?.filter(a=>a.saversDepth!=="0").sort((a,r)=>new w({value:r.runeDepth,decimal:8}).sub(a.runeDepth).getValue("number"))||[];i(e)},[i,u]),b};export{k as u};
